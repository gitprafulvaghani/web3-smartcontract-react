{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/simple-web3-integrate/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const providerUrl = process.env.PROVIDER_URL || 'http://localhost:8545';\n  useEffect(() => {\n    let web3;\n\n    // Check if MetaMask (or other Ethereum provider) is available\n    if (typeof window.ethereum !== 'undefined') {\n      web3 = new Web3(window.ethereum);\n\n      // Request accounts access\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        console.log('Connected accounts:', accounts);\n      }).catch(err => {\n        console.error('Error requesting accounts:', err);\n      });\n    } else {\n      // Fallback to provider URL if no browser extension is available\n      web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n      console.log('Using fallback provider:', providerUrl);\n    }\n  }, [providerUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Web3 React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Check the console for account connection status.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Web3","jsxDEV","_jsxDEV","App","_s","providerUrl","process","env","PROVIDER_URL","web3","window","ethereum","request","method","then","accounts","console","log","catch","err","error","providers","HttpProvider","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imac/Documents/simple-web3-integrate/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Web3 from 'web3';\n\nfunction App() {\n  const providerUrl = process.env.PROVIDER_URL || 'http://localhost:8545';\n\n  useEffect(() => {\n    let web3;\n\n    // Check if MetaMask (or other Ethereum provider) is available\n    if (typeof window.ethereum !== 'undefined') {\n      web3 = new Web3(window.ethereum);\n\n      // Request accounts access\n      window.ethereum\n        .request({ method: 'eth_requestAccounts' })\n        .then((accounts) => {\n          console.log('Connected accounts:', accounts);\n        })\n        .catch((err) => {\n          console.error('Error requesting accounts:', err);\n        });\n    } else {\n      // Fallback to provider URL if no browser extension is available\n      web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n      console.log('Using fallback provider:', providerUrl);\n    }\n  }, [providerUrl]);\n\n  return (\n    <div className=\"App\">\n      <h1>Web3 React App</h1>\n      <p>Check the console for account connection status.</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,YAAY,IAAI,uBAAuB;EAEvET,SAAS,CAAC,MAAM;IACd,IAAIU,IAAI;;IAER;IACA,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1CF,IAAI,GAAG,IAAIT,IAAI,CAACU,MAAM,CAACC,QAAQ,CAAC;;MAEhC;MACAD,MAAM,CAACC,QAAQ,CACZC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC,CAC1CC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;MAC9C,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC;MAClD,CAAC,CAAC;IACN,CAAC,MAAM;MACL;MACAV,IAAI,GAAG,IAAIT,IAAI,CAAC,IAAIA,IAAI,CAACqB,SAAS,CAACC,YAAY,CAACjB,WAAW,CAAC,CAAC;MAC7DW,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEZ,WAAW,CAAC;IACtD;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MAAAsB,QAAA,EAAG;IAAgD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACxB,EAAA,CAhCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}